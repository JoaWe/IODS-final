str(hd)
dim(hd)
str(gii)
dim(gii)
#data-summaries:
summary(hd)
summary(gii)
#Taking a look at the column-names:
colnames(hd)
colnames(gii)
#Re-naming the column-names:
new_colnames_hd <- c("HDI_Rank", "Country", "HDI", "Life_Exp", "Exp_y_Edu", "MeanEdu", "GNIpCap", "GNIR_minus_HDIR")
new_colnames_gii <- c("GII_Rank", "Country", "GII", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.F", "Edu2.M", "LabF", "LabM")
colnames(hd) <- new_colnames_hd
colnames(gii) <- new_colnames_gii
colnames(hd)
colnames(gii)
#Mutating gii-data & creating new variables:
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Lab.FM = (LabF / LabM))
#Joining datasets hd and gii:
human <- inner_join(hd, gii, by = c("Country"))
dim(human)
#creating new file:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv",row.names = FALSE)
read.csv("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv")
#Changing GNIpCap to numeric:
str(human$GNIpCap)
str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
#keeping 9 columns: Country, Life_Exp, Exp_y_Edu, GNIpCap MatMorRatio, Adol_Birth_Rate, ParlRepPercent, Edu2.FM, and Lab.FM:
keep <- c("Country", "Life_Exp", "Exp_y_Edu", "GNIpCap", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.FM", "Lab.FM")
#selecting keep-columns:
human <- select(human, one_of(keep))
#dimensions-check to make sure, I have the 9 columns:
dim(human)
#printing completeness-indicator:
complete.cases(human)
#printing the data with completteness-indicator as last column:
data.frame(human[-1], comp = complete.cases(human))
#filtering out all rows with NA-values
human_ <- filter(human, complete.cases(human))
#looking at observations for countries:
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
#Identified as Regions: World,Sub-Saharan Africa, South Asia, Latin America and the Caribbean, Europe and Central Asia, East Asia and the Pacific, and Arab States
#These are to be removed from the new dataset!
#creating object "last":
last <- nrow(human) - 7
#Choosing everything until the "last"-data:
human_ <- human[1:last,]
#Defining rownames:
rownames(human) <- human$Country
rownames(human)
#removing column Country:
human_ <- select(human, -Country)
human
table(is.na(human))
#filtering out all rows with NA-values
human_ <- filter(human, complete.cases(human))
#looking at observations for countries:
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
#Identified as Regions: World,Sub-Saharan Africa, South Asia, Latin America and the Caribbean, Europe and Central Asia, East Asia and the Pacific, and Arab States
#These are to be removed from the new dataset!
#creating object "last":
last <- nrow(human) - 7
#Choosing everything until th
#Choosing everything until the "last"-data:
human_ <- human[1:last,]
human_ <- filter(human_, complete.cases(human))
human_ <- filter(human_, complete.cases(human_))
table(is.na(human_))
table(is.na(human))
#looking at observations for countries:
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
#Identified as Regions: World,Sub-Saharan Africa, South Asia, Latin America and the Caribbean, Europe and Central Asia, East Asia and the Pacific, and Arab States
#These are to be removed from the new dataset!
#creating object "last":
last <- nrow(human) - 7
#Choosing everything until the "last"-data:
human_ <- human[1:last,]
human <- filter(human_, complete.cases(human_))
#Defining rownames:
rownames(human) <- human$Country
rownames(human)
#removing column Country:
human <- select(human, -Country)
#saving the data in my data-folder:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\human.csv", row.names = TRUE)
human_ <- select(human, -Country)
library(GGally)
human <- select(human_, -Country)
?select
??select
library(GGally)
human <- select(.human_, -Country)
View(human_)
# Joana
# 04.12.2017
#Datawrangling Rstudio- tasks 4 & 5
#The orignial datasets contain 7 variables and 195 observations (Human development Index) and 10 variables with the same number of Observations.
#Libraries:
library(dplyr)
library(ggplot2)
library(stringr)
#Reading Human development (hd) -data into R:
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
#Reading Gender Inequality Index (gii) -data into R:
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
#Structures and dimensions:
str(hd)
dim(hd)
str(gii)
dim(gii)
#data-summaries:
summary(hd)
summary(gii)
#Taking a look at the column-names:
colnames(hd)
colnames(gii)
#Re-naming the column-names:
new_colnames_hd <- c("HDI_Rank", "Country", "HDI", "Life_Exp", "Exp_y_Edu", "MeanEdu", "GNIpCap", "GNIR_minus_HDIR")
new_colnames_gii <- c("GII_Rank", "Country", "GII", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.F", "Edu2.M", "LabF", "LabM")
colnames(hd) <- new_colnames_hd
colnames(gii) <- new_colnames_gii
colnames(hd)
colnames(gii)
#Mutating gii-data & creating new variables:
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Lab.FM = (LabF / LabM))
#Joining datasets hd and gii:
human <- inner_join(hd, gii, by = c("Country"))
dim(human)
#creating new file:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv",row.names = FALSE)
read.csv("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv")
#Changing GNIpCap to numeric:
str(human$GNIpCap)
str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
#keeping 9 columns: Country, Life_Exp, Exp_y_Edu, GNIpCap MatMorRatio, Adol_Birth_Rate, ParlRepPercent, Edu2.FM, and Lab.FM:
keep <- c("Country", "Life_Exp", "Exp_y_Edu", "GNIpCap", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.FM", "Lab.FM")
#selecting keep-columns:
human <- select(human, one_of(keep))
#dimensions-check to make sure, I have the 9 columns:
dim(human)
#printing completeness-indicator:
complete.cases(human)
#printing the data with completteness-indicator as last column:
data.frame(human[-1], comp = complete.cases(human))
#looking at observations for countries:
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
#Identified as Regions: World,Sub-Saharan Africa, South Asia, Latin America and the Caribbean, Europe and Central Asia, East Asia and the Pacific, and Arab States
#These are to be removed from the new dataset!
#creating object "last":
last <- nrow(human) - 7
#Choosing everything until the "last"-data:
human_ <- human[1:last,]
#filtering out all rows with NA-values:
human <- filter(human_, complete.cases(human_))
#Defining rownames:
rownames(human) <- human$Country
rownames(human)
#Well, seems like, I have now 155 observations and 8 variables...
#saving the data in my data-folder:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\human.csv", row.names = TRUE)
library(GGally)
human <- select(human, -Country)
ggpairs(human, cardinality_threshold = NULL)
cor(human)%>%corrplot
str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
str(human$GNIpCap)
human_ <- select(human, -Country, -GNIpCap)
human <- select(human_, -Country, -GNIpCap)
ggpairs(human)
cor(human)%>%corrplot
human_std <- scale(human)
human_std
human_std <- scale(human)
human_std
human_std <- scale(human_)
#filtering out all rows with NA-values:
human <- filter(human_, complete.cases(human_))
str(human)
#Libraries:
library(dplyr)
library(ggplot2)
library(stringr)
#Reading Human development (hd) -data into R:
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
#Reading Gender Inequality Index (gii) -data into R:
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
#Structures and dimensions:
str(hd)
dim(hd)
str(gii)
dim(gii)
#data-summaries:
summary(hd)
summary(gii)
#Taking a look at the column-names:
colnames(hd)
colnames(gii)
#Re-naming the column-names:
new_colnames_hd <- c("HDI_Rank", "Country", "HDI", "Life_Exp", "Exp_y_Edu", "MeanEdu", "GNIpCap", "GNIR_minus_HDIR")
new_colnames_gii <- c("GII_Rank", "Country", "GII", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.F", "Edu2.M", "LabF", "LabM")
colnames(hd) <- new_colnames_hd
colnames(gii) <- new_colnames_gii
colnames(hd)
colnames(gii)
#Mutating gii-data & creating new variables:
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Lab.FM = (LabF / LabM))
#Joining datasets hd and gii:
human <- inner_join(hd, gii, by = c("Country"))
dim(human)
#creating new file:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv",row.names = FALSE)
read.csv("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv")
#Changing GNIpCap to numeric:
str(human$GNIpCap)
str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
str(human$GNIpCap)
#keeping 9 columns: Country, Life_Exp, Exp_y_Edu, GNIpCap MatMorRatio, Adol_Birth_Rate, ParlRepPercent, Edu2.FM, and Lab.FM:
keep <- c("Country", "Life_Exp", "Exp_y_Edu", "GNIpCap", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.FM", "Lab.FM")
#selecting keep-columns:
human <- select(human, one_of(keep))
#dimensions-check to make sure, I have the 9 columns:
dim(human)
#printing completeness-indicator:
complete.cases(human)
#printing the data with completteness-indicator as last column:
data.frame(human[-1], comp = complete.cases(human))
#looking at observations for countries:
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
#Identified as Regions: World,Sub-Saharan Africa, South Asia, Latin America and the Caribbean, Europe and Central Asia, East Asia and the Pacific, and Arab States
#These are to be removed from the new dataset!
#creating object "last":
last <- nrow(human) - 7
#Choosing everything until the "last"-data:
human_ <- human[1:last,]
#filtering out all rows with NA-values:
human <- filter(human_, complete.cases(human_))
#Defining rownames:
rownames(human) <- human$Country
rownames(human)
#removing column Country:
human <- select(human, -Country)
#Well, seems like, I have now 155 observations and 8 variables...
#saving the data in my data-folder:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\human.csv", row.names = TRUE)
human_std <- scale(human)
human_std <- scale(human_)
human_std <- scale(human)
human_std <- scale(human, -Country)
human_std <- scale(human_, -Country)
human_std <- scale(human, -GNIpCap)
str(human)
r(human$GNIpCap)
str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
str(human$G
str(human)
#keeping 9 columns: Country, Life_Exp, Exp_y_Edu, GNIpCap MatMorRatio, Adol_Birth_Rate, ParlRepPercent, Edu2.FM, and Lab.FM:
keep <- c("Country", "Life_Exp", "Exp_y_Edu", "GNIpCap", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.FM", "Lab.FM")
str(human)
dim(human)
str(human$GNIpCap)
human$GNIpCap
str(human)
dim(human)
human_std <- scale(human)
summary(human$Life_Exp)
summary(human$Exp_y_Edu)
summary(human$GNIpCap)
summary(human$MatMorRatio)
summary(human$Adol_Birth_Rate)
summary(human$ParlRepPercent)
summary(human$Edu2.FM)
summary(human$Lab.FM)
library(GGally)
human_std <- select(human,-Country)
summary(human$GNIpCap)
#keeping 9 columns: Country, Life_Exp, Exp_y_Edu, GNIpCap MatMorRatio, Adol_Birth_Rate, ParlRepPercent, Edu2.FM, and Lab.FM:
keep <- c("Country", "Life_Exp", "Exp_y_Edu", "GNIpCap", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.FM", "Lab.FM")
#selecting keep-columns:
human <- select(human, one_of(keep))
#Libraries:
library(dplyr)
library(ggplot2)
#Reading Human development (hd) -data into R:
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
#Reading Gender Inequality Index (gii) -data into R:
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
#Structures and dimensions:
str(hd)
dim(hd)
str(gii)
dim(gii)
#data-summaries:
summary(hd)
summary(gii)
#Taking a look at the column-names:
colnames(hd)
colnames(gii)
#Re-naming the column-names:
new_colnames_hd <- c("HDI_Rank", "Country", "HDI", "Life_Exp", "Exp_y_Edu", "MeanEdu", "GNIpCap", "GNIR_minus_HDIR")
new_colnames_gii <- c("GII_Rank", "Country", "GII", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.F", "Edu2.M", "LabF", "LabM")
colnames(hd) <- new_colnames_hd
colnames(gii) <- new_colnames_gii
colnames(hd)
colnames(gii)
#Mutating gii-data & creating new variables:
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Lab.FM = (LabF / LabM))
#Joining datasets hd and gii:
human <- inner_join(hd, gii, by = c("Country"))
dim(human)
#creating new file:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv",row.names = FALSE)
read.csv("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv")
#Changing GNIpCap to numeric:
library(stringr)
str(human$GNIpCap)
str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
str(human$GNIpCap)
#keeping 9 columns: Country, Life_Exp, Exp_y_Edu, GNIpCap MatMorRatio, Adol_Birth_Rate, ParlRepPercent, Edu2.FM, and Lab.FM:
keep <- c("Country", "Life_Exp", "Exp_y_Edu", "GNIpCap", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.FM", "Lab.FM")
#selecting keep-columns:
human <- select(human, one_of(keep))
#dimensions-check to make sure, I have the 9 columns:
dim(human)
#printing completeness-indicator:
complete.cases(human)
#printing the data with completteness-indicator as last column:
data.frame(human[-1], comp = complete.cases(human))
#looking at observations for countries:
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
#Identified as Regions: World,Sub-Saharan Africa, South Asia, Latin America and the Caribbean, Europe and Central Asia, East Asia and the Pacific, and Arab States
#These are to be removed from the new dataset!
#creating object "last":
last <- nrow(human) - 7
#Choosing everything until the "last"-data:
human_ <- human[1:last,]
#filtering out all rows with NA-values:
human <- filter(human_, complete.cases(human_))
#Defining rownames:
rownames(human) <- human$Country
rownames(human)
#removing column Country:
human <- select(human, -Country)
#Well, seems like, I have now 155 observations and 8 variables...
#saving the data in my data-folder:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\human.csv", row.names = TRUE)
summary(human$MatMorRatio)
human_std <- select(human,-Country)
library(GGally)
ggpairs(human)
human_std <- scale(human)
human_std <- scale(human, -GNIpCap)
human_std <- scale(human, -Country)
human_std <- scale(human_)
human_std <- scale(human)
human <- select(human_, -Country)
ggpairs(human)
str(human$GNIpCap)
str_stringr::replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
stringr::str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
str(human$GNIpCap)
str(human)
#Libraries:
library(dplyr)
library(ggplot2)
#Reading Human development (hd) -data into R:
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
#Reading Gender Inequality Index (gii) -data into R:
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
#Structures and dimensions:
str(hd)
dim(hd)
str(gii)
dim(gii)
#data-summaries:
summary(hd)
summary(gii)
#Taking a look at the column-names:
colnames(hd)
colnames(gii)
#Re-naming the column-names:
new_colnames_hd <- c("HDI_Rank", "Country", "HDI", "Life_Exp", "Exp_y_Edu", "MeanEdu", "GNIpCap", "GNIR_minus_HDIR")
new_colnames_gii <- c("GII_Rank", "Country", "GII", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.F", "Edu2.M", "LabF", "LabM")
colnames(hd) <- new_colnames_hd
colnames(gii) <- new_colnames_gii
colnames(hd)
colnames(gii)
#Mutating gii-data & creating new variables:
gii <- mutate(gii, Edu2.FM = (Edu2.F / Edu2.M))
gii <- mutate(gii, Lab.FM = (LabF / LabM))
#Joining datasets hd and gii:
human <- inner_join(hd, gii, by = c("Country"))
dim(human)
#creating new file:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv",row.names = FALSE)
read.csv("C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\human.csv")
#Changing GNIpCap to numeric:
library(stringr)
str(human$GNIpCap)
str_replace(human$GNIpCap, pattern = ",", replace = "") %>% as.numeric
str(human$GNIpCap)
#keeping 9 columns: Country, Life_Exp, Exp_y_Edu, GNIpCap MatMorRatio, Adol_Birth_Rate, ParlRepPercent, Edu2.FM, and Lab.FM:
keep <- c("Country", "Life_Exp", "Exp_y_Edu", "GNIpCap", "MatMorRatio", "Adol_Birth_Rate", "ParlRepPercent", "Edu2.FM", "Lab.FM")
#selecting keep-columns:
human <- dplyr::select(human, one_of(keep))
#dimensions-check to make sure, I have the 9 columns:
dim(human)
#printing completeness-indicator:
complete.cases(human)
#printing the data with completteness-indicator as last column:
data.frame(human[-1], comp = complete.cases(human))
#looking at observations for countries:
human$Country
# using tail function to look at last 10 observations:
tail(human, 10)
#Identified as Regions: World,Sub-Saharan Africa, South Asia, Latin America and the Caribbean, Europe and Central Asia, East Asia and the Pacific, and Arab States
#These are to be removed from the new dataset!
#creating object "last":
last <- nrow(human) - 7
#Choosing everything until the "last"-data:
human_ <- human[1:last,]
#filtering out all rows with NA-values:
human <- filter(human_, complete.cases(human_))
#Defining rownames:
rownames(human) <- human$Country
rownames(human)
#removing column Country:
human <- dplyr::select(human, -Country)
#Well, seems like, I have now 155 observations and 8 variables...
#saving the data in my data-folder:
write.csv(human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-project\\data\\human.csv", row.names = TRUE)
View(gii)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
# HDI.Rank - HDIR
colnames(hd)[1] <- "HDIR"
# Human.Development.Index..HDI. - HDI
colnames(hd)[3] <- "HDI"
# Life.Expectancy.at.Birth - Life_Exp
colnames(hd)[4] <- "Life_Exp"
# Expected.Years.of Education - Exp_Edu
colnames(hd)[5] <- "Exp_Edu"
# Mean.Years.of.Education - Mean_Edu
colnames(hd)[6] <- "Mean_Edu"
# Gross.National.Income..GNI..per.Capita - GNI
colnames(hd)[7] <- "GNI"
# GNI.per.Capita.Rank.Minus.HDI.Rank - Diff_GNI_HDI
colnames(hd)[8] <- "Diff_GNI_HDI"
# Checking the new variable-names:
colnames(hd)
# GII.Rank - RGII
colnames(gii)[1] <- "RGII"
# Gender.Inequality.Index..GII. - GII
colnames(gii)[3] <- "GII"
# Maternal.Mortality.Ratio - MMR
colnames(gii)[4] <- "MMR"
# Adolescent.Birth.Rate - ABR
colnames(gii)[5] <- "ABR"
# Percent.Representation.in.Parliament - PRP
colnames(gii)[6] <- "PRP"
# Population.with.Secondary.Education..Female. - sec_Edu_F
colnames(gii)[7] <- "sec_Edu_F"
# Population.with.Secondary.Education..Male - sec_Edu_M
colnames(gii)[8] <- "sec_Edu_M"
# Labour.Force.Participation.Rate..Female. - LF_F
colnames(gii)[9] <- "LF_F"
# Labour.Force.Participation.Rate..Male. - LF_M
colnames(gii)[10] <-"LF_M"
colnames(gii)
join_by <- c("Country")
fa_human <- inner_join(hd, gii, by = join_by)
# The variable "Country" exists in both datasets, and can therefore ideally be used to combine the datasets into one.
join_by <- c("Country")
fa_human <- inner_join(hd, gii, by = join_by)
?inner_join
# The variable "Country" exists in both datasets, and can therefore ideally be used to combine the datasets into one.
fa_human <- inner_join(hd, gii, by = c("Country"))
# The variable "Country" exists in both datasets, and can therefore ideally be used to combine the datasets into one.
fa_human <- inner_join(hd, gii, by = c("Country"))
library(dplyr)
library(stringr)
# The variable "Country" exists in both datasets, and can therefore ideally be used to combine the datasets into one.
fa_human <- inner_join(hd, gii, by = c("Country"))
dim(fa_human)
colnames(fa_human)
#Setting the working directory to the data-folder within the IODS-final folder:
setwd("C:\\Users\\Ani\\Documents\\GitHub\\IODS-final")
# Saving the dataset:
write.csv(fa_human, file = "C:\\Users\\Ani\\Documents\\GitHub\\IODS-final\\fa_human.csv")
